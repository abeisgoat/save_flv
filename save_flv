#!/usr/bin/env python
import subprocess, re, sys, platform
from subprocess import *

print 'Searching for flash videos...'
print '(Please make sure the video is completely buffered before running)'

# Find filename
if len(sys.argv) < 2:
	filename = 'video.flv'
else:
	filename = sys.argv[1]

# Regex to parse lsof string
parse = re.compile('.+ ([0-9]+).+?([0-9]+).+,.+ .+ .+/tmp/Flash.+ \(deleted\)')

# Get the pids for the flash player
if platform.architecture()[0] == '64bit': 
	print 'Looking for videos in 64bit Flash'
	lsof =  Popen(['lsof', '-c', 'npviewer.bin'], stdout=PIPE)
elif platform.architecture()[0] == '32bit':
	print 'Looking for videos in 32bit Flash'
	lsof =  Popen(['lsof', '-c', 'chromium-'], stdout=PIPE)
else:
	print "I'm not sure how to find flash on your architecture"
	sys.exit()

# Processes is the stdout from grep
processes = lsof.communicate()[0]

# Regex out all the data we cat about
try:
	videos = parse.findall(processes)
except IndexError:
	print 'No flash videos found'
	sys.exit()

extra = ''
for x,video in enumerate(videos):
	if len(videos)-1: extra = '_' + x
	# Find the processes folder in /proc/ with the dettached file handle and cat it
	cat = Popen(['cat', '/proc/' + video[0] + '/fd/' + video[1]], stdout=PIPE)

	# Redirect stdout to a video file
	file = open(filename + extra, 'w')
	file.write(cat.communicate()[0])
	file.close()

	print 'Video saved to %s' % filename
